local data = require "main.data"
local enemy = require "game.enemy.enemy"

function init(self)
	self.energy = 2
	self.pos = vmath.vector3(data.world2tile(go.get_position()))
	msg.post("#sprite", "disable")
	self.type = math.random(1, 5)
	anim = "e"..tostring(self.type)
	sprite.play_flipbook("#sprite", anim)
end

local function attack(self)
	msg.post("player", "hit", {damage = 5})
end

local function trymove(self, move)
	local pos = self.pos + move
	local t = tilemap.get_tile("/level#tilemap", "world", pos.x, pos.y)
	
	if t < 71 then
		if pos.x == data.playerpos.x and pos.y == data.playerpos.y then
			attack(self)
		else
			local url = enemy.ontile(pos)

			if url == nil then
				go.animate(".", "position", go.PLAYBACK_ONCE_FORWARD, data.tile2world(pos), go.EASING_LINEAR, 0.1)
				enemy.setpos(go.get_id(), pos)
				self.pos = pos
			end
		end
	end
end

local function ai(self)
	local THRESH = 2

	if math.abs(self.pos.x - data.playerpos.x) <= THRESH and math.abs(self.pos.y - data.playerpos.y) <= THRESH then
		local move = vmath.vector3()
		
		if math.random(1, 2) > 1 then
			if self.pos.x > data.playerpos.x then
				move.x = -1
			elseif self.pos.x < data.playerpos.x then
				move.x = 1
			end

			if self.pos.y > data.playerpos.y then
				move.y = -1
			elseif self.pos.y < data.playerpos.y then
				move.y = 1
			end
			trymove(self, move)
		end
	else
		local moves = {vmath.vector3(1,0,0), vmath.vector3(-1,0,0), vmath.vector3(0,1,0), vmath.vector3(0,-1,0)}
		trymove(self, moves[math.random(1,4)])
	end
end

local function look(self)
	local pos = go.get_position()
	local player = data.tile2world(data.playerpos)

	if pos.x > player.x then player.x = player.x + 5
	elseif pos.x < player.x then player.x = player.x - 5
	end
	if pos.y > player.y then player.y = player.y + 5
	elseif pos.y < player.y then player.y = player.y - 5
	end
	
	if pos.x ~= player.x or pos.y ~= player.y then
		local cast = physics.raycast(pos, player, {hash("world"), hash("player")}, false)
		if cast == nil or cast.group == hash("player") then
			msg.post("#sprite", "enable")
		else
			msg.post("#sprite", "disable")
		end
	end
end

function update(self, dt)
	if data.turn == 10  then
		ai(self)
		look(self)
	end
end

local function hit(self, damage)
	enemy.delete(go.get_id())
	msg.post("view#game", "status", {text = "DESTROYED A ROBOT"})
	msg.post("effect", "explode", {pos = go.get_position()})
	sound.play("main:/sound#hit1")
	data.xp = data.xp + 10
	data.kills = data.kills + 1
end

function on_message(self, message_id, message, sender)
	if message_id == hash("hit") then
		hit(self, message.damage)
	end
end

